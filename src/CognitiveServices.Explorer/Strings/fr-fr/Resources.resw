<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddFace_Person.Header" xml:space="preserve">
    <value>Sélectionnez la personne associée au visage :</value>
  </data>
  <data name="AddPerson" xml:space="preserve">
    <value>Ajouter une personne</value>
  </data>
  <data name="AppDisplayName" xml:space="preserve">
    <value>CognitiveServices.Explorer</value>
  </data>
  <data name="EditPerson" xml:space="preserve">
    <value>Modifier une personne</value>
  </data>
  <data name="Face_Group_Add.Content" xml:space="preserve">
    <value>Ajouter un groupe</value>
  </data>
  <data name="Face_Group_AddGroup" xml:space="preserve">
    <value>Ajout du groupe en cours...</value>
  </data>
  <data name="Face_Group_AddPerson" xml:space="preserve">
    <value>Ajout de la personne en cours...</value>
  </data>
  <data name="Face_Group_Add_Description.Header" xml:space="preserve">
    <value>Description du groupe :</value>
  </data>
  <data name="Face_Group_Add_Name.Header" xml:space="preserve">
    <value>Nom du groupe :</value>
  </data>
  <data name="Face_Group_Add_RecognitionModel.Header" xml:space="preserve">
    <value>Modèle de reconnaisance faciale :</value>
  </data>
  <data name="Face_Group_GetGroups" xml:space="preserve">
    <value>Récupération de la liste des groupes en cours...</value>
  </data>
  <data name="Face_Group_GetPeople" xml:space="preserve">
    <value>Récupération des personnes associées au groupe en cours...</value>
  </data>
  <data name="Face_Group_NewGroup.Text" xml:space="preserve">
    <value>Ajouter une personne (Ctrl+Shift+N)</value>
  </data>
  <data name="Face_Group_Remove.Content" xml:space="preserve">
    <value>Supprimer le groupe</value>
  </data>
  <data name="Face_People.ListHeader" xml:space="preserve">
    <value>Gestion des groupes et des personnes</value>
  </data>
  <data name="Face_People_Filter.PlaceholderText" xml:space="preserve">
    <value>Filtrer les personnes</value>
  </data>
  <data name="Face_People_NoSelection.Text" xml:space="preserve">
    <value>Selectionner un groupe dans la liste.</value>
  </data>
  <data name="Face_People_People.Text" xml:space="preserve">
    <value>personnes</value>
  </data>
  <data name="Face_People_Training.Text" xml:space="preserve">
    <value>Entraîner le groupe</value>
  </data>
  <data name="Face_People_TrainingOnGoing" xml:space="preserve">
    <value>Entraînement du groupe en cours...</value>
  </data>
  <data name="Face_Person_Add.Text" xml:space="preserve">
    <value>Ajouter une personne (Ctrl+N)</value>
  </data>
  <data name="Face_Person_Add_Name.Header" xml:space="preserve">
    <value>Nom de la personne :</value>
  </data>
  <data name="Face_Person_Add_Picture.Header" xml:space="preserve">
    <value>Url de l'image de la personne :</value>
  </data>
  <data name="Face_Person_Face_Number.Text" xml:space="preserve">
    <value>Nombre de faces :</value>
  </data>
  <data name="Face_Person_Remove.Text" xml:space="preserve">
    <value>Supprimer la personne</value>
  </data>
  <data name="Face_Person_UpdatePerson" xml:space="preserve">
    <value>Mise à jour de la personne en cours...</value>
  </data>
  <data name="OpenImage.Content" xml:space="preserve">
    <value>Ouvrir une image</value>
  </data>
  <data name="PictureAnalyse_AddPersonFace.Text" xml:space="preserve">
    <value>Ajouter un visage</value>
  </data>
  <data name="PictureAnalyse_NoImage.Text" xml:space="preserve">
    <value>Aucune image n'est ouverte.</value>
  </data>
  <data name="PictureAnalyse_OpenIndication.Text" xml:space="preserve">
    <value>Veuillez ouvrir une image avec le bouton ci-dessous ou en glisser-déposer une.</value>
  </data>
  <data name="PictureAnalyse_StartFaceDetection.Text" xml:space="preserve">
    <value>Lancer la détection faciale</value>
  </data>
  <data name="PictureAnalyse_StartFaceRecognition.Text" xml:space="preserve">
    <value>Lancer la reconnaisance faciale</value>
  </data>
  <data name="Refresh.Text" xml:space="preserve">
    <value>Actualiser</value>
  </data>
  <data name="Settings_About.Text" xml:space="preserve">
    <value>A propos de cette application</value>
  </data>
  <data name="Settings_AboutDescription.Text" xml:space="preserve">
    <value>Settings page placeholder text.  Your app description goes here.</value>
  </data>
  <data name="Settings_Api.Text" xml:space="preserve">
    <value>API</value>
  </data>
  <data name="Settings_Api_Endpoint.Text" xml:space="preserve">
    <value>Entrer le point de terminaison fourni par l'API.</value>
  </data>
  <data name="Settings_Api_Face.Text" xml:space="preserve">
    <value>Face API</value>
  </data>
  <data name="Settings_Api_Face_Endpoint.Text" xml:space="preserve">
    <value>Point de terminaison de la Face API</value>
  </data>
  <data name="Settings_Api_Face_Key.Text" xml:space="preserve">
    <value>Clé de la Face API</value>
  </data>
  <data name="Settings_Api_Key.Text" xml:space="preserve">
    <value>Entrez une des deux clés fournies par l'API.</value>
  </data>
  <data name="Settings_Personalization.Text" xml:space="preserve">
    <value>Personnalisation</value>
  </data>
  <data name="Settings_Theme.Text" xml:space="preserve">
    <value>Thème</value>
  </data>
  <data name="Settings_Theme_Dark.Content" xml:space="preserve">
    <value>Sombre</value>
  </data>
  <data name="Settings_Theme_Default.Content" xml:space="preserve">
    <value>Paramètres Windows par défaut</value>
  </data>
  <data name="Settings_Theme_Light.Content" xml:space="preserve">
    <value>Clair</value>
  </data>
  <data name="Shell_FacePeople.Content" xml:space="preserve">
    <value>Gestion des personnes</value>
  </data>
  <data name="Shell_PictureAnalyse.Content" xml:space="preserve">
    <value>Analyse des images</value>
  </data>
</root>